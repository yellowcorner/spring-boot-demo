# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # env:
  #   PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  #   GAR_LOCATION: us-central1 # TODO: update region of the Artifact Registry
  #   GKE_CLUSTER: cluster-1    # TODO: update to cluster name
  #   GKE_ZONE: us-central1-c   # TODO: update to cluster zone
  #   DEPLOYMENT_NAME: gke-test # TODO: update to deployment name
  #   REPOSITORY: samples # TODO: update to Artifact Registry docker repository
  #   IMAGE: static-site  

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      # - name: Build Complete with Maven
      #   run: ./mvnw --batch-mode clean package

      - name: Build Complete with Gradle
        run: ./gradlew build -x test
        
      - name: Build the Docker image
        run: docker build . --file Dockerfile --tag my-image-name:$(date +%s)
    